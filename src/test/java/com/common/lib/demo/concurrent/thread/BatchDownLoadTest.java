package com.common.lib.demo.concurrent.thread;

import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Lists;
import com.google.common.util.concurrent.Uninterruptibles;
import lombok.Data;
import lombok.Getter;
import org.junit.Test;

import java.io.*;
import java.math.BigDecimal;
import java.net.URL;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.concurrent.*;
import java.util.concurrent.atomic.AtomicLong;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * \* Created: liuhuichao
 * \* Date: 2021/10/30
 * \* Time: 8:56 下午
 * \* Description:
 * \
 */
public class BatchDownLoadTest {

    //ExecutorService executor = Executors.newFixedThreadPool(10);
    ExecutorService executor = new ThreadPoolExecutor(4, 8, 240, TimeUnit.SECONDS, new LinkedBlockingQueue<>(1000), new ThreadPoolExecutor.AbortPolicy());
    AtomicLong counter = new AtomicLong(1);
    CountDownLatch count;

    @Test
    public void test() {
        String url = "https://oss-image.17zuoye.com/homework/customize/prod/2021/12/02/1638446026964.txt.txt";
        File txtFile = null;
        long begin = System.currentTimeMillis();
        try {
            final File upload = new File("", "tmp");
            if (!upload.exists()) {
                upload.mkdirs();
            }
            txtFile = urlToFile(url, "/" + System.currentTimeMillis(), upload);
            String jsonTxt = getFileStr(txtFile);
            List<StudentInfo> studentInfoList = JSONObject.parseArray(jsonTxt, StudentInfo.class);
            System.out.println("总计条数： " + studentInfoList.size());
            System.out.println("解析完成，开始下载....");
            count = new CountDownLatch(studentInfoList.size());
            for (StudentInfo studentInfo : studentInfoList) {
                String fileName = studentInfo.getSName() + "[" + studentInfo.getSid() + "]" + "-" + getSubjectName(studentInfo.getSubject()) + ".pdf";
                executor.submit(new StudentDownLoad(studentInfo.getUrl(), fileName, count));
            }
            if (!Uninterruptibles.awaitUninterruptibly(count, 30, TimeUnit.MINUTES)) {
                // 超时啦
                System.out.println(count.getCount());
                System.out.println("超时啦啦啦啦------");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        long end = System.currentTimeMillis();

        System.out.println("执行完成，总计用时为：" + (end - begin));
    }

    @Data
    public class StudentDownLoad implements Runnable {
        String fileUrl;
        String fileName;
        CountDownLatch count;

        public StudentDownLoad(String url, String fileName, CountDownLatch count) {
            this.fileUrl = url;
            this.fileName = fileName;
            this.count = count;
        }

        @Override
        public void run() {
            try {
                urlToFile(this.fileUrl, this.fileName);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                this.count.countDown();
                System.out.println("当前完成条数：" + counter.getAndIncrement());
            }

        }
    }


    private String getFileStr(File txtFile) {
        StringBuilder txtStrBuilder = new StringBuilder();
        try {
            BufferedReader reader = null;
            reader = new BufferedReader(new FileReader(txtFile));
            String tempString;
            while ((tempString = reader.readLine()) != null) {
                txtStrBuilder.append(tempString);
            }
            reader.close();
        } catch (Exception e) {
            e.printStackTrace();
            return "";
        }
        return txtStrBuilder.toString().replaceAll("[\n\r\t]", "").trim();
    }


    /**
     * @param fileUrl 资源地址
     * @Description: 网络资源转file, 用完以后必须删除该临时文件
     * @return: 返回值
     */
    private File urlToFile(String fileUrl, String fileName) {
        FileOutputStream downloadFile = null;
        InputStream openStream = null;
        File savedFile = null;
        try {
            savedFile = new File("/Users/liuhuichao/test/cuotiben/" + fileName);
            URL url = new URL(fileUrl);
            java.net.HttpURLConnection connection = (java.net.HttpURLConnection) url.openConnection();
            openStream = connection.getInputStream();
            int index;
            byte[] bytes = new byte[1024];
            downloadFile = new FileOutputStream(savedFile);
            while ((index = openStream.read(bytes)) != -1) {
                downloadFile.write(bytes, 0, index);
                downloadFile.flush();
            }
            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (openStream != null) {
                    openStream.close();
                }
                if (downloadFile != null) {
                    downloadFile.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return savedFile;
    }

    /**
     * @param fileUrl 资源地址
     * @param upload  临时文件路径
     * @Description: 网络资源转file, 用完以后必须删除该临时文件
     * @return: 返回值
     */
    private File urlToFile(String fileUrl, String fileName, File upload) {
        FileOutputStream downloadFile = null;
        InputStream openStream = null;
        File savedFile = null;
        try {
            savedFile = new File("/Users/liuhuichao/test/cuotiben/" + fileName);
            URL url = new URL(fileUrl);
            java.net.HttpURLConnection connection = (java.net.HttpURLConnection) url.openConnection();
            openStream = connection.getInputStream();
            int index;
            byte[] bytes = new byte[1024];
            downloadFile = new FileOutputStream(savedFile);
            while ((index = openStream.read(bytes)) != -1) {
                downloadFile.write(bytes, 0, index);
                downloadFile.flush();
            }
            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (openStream != null) {
                    openStream.close();
                }
                if (downloadFile != null) {
                    downloadFile.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return savedFile;
    }

    @Data
    private static class StudentInfo implements Serializable {
        private static final long serialVersionUID = 6905516511852936919L;
        private Long sid;
        private String sName;
        private String subject;
        private String url;
    }

    private String getSubjectName(String subject) {
        if ("MATH".equals(subject)) {
            return "数学";
        }
        if ("ENGLISH".equals(subject)) {
            return "英语";
        }
        if ("CHINESE".equals(subject)) {
            return "语文";
        }
        return "";
    }

    public static void main(String[] args) {
        //List<String> ids = Lists.newArrayList("Q_10116839152669", "Q_10116839154199", "Q_10116839157333", "Q_10116839161497", "Q_10116839164845", "Q_10116832076717", "Q_10116832102227", "Q_10116839475801", "Q_10116832082723", "Q_10116832083743", "Q_10116832084473", "Q_10116832085470", "Q_10116832086602", "Q_10116832087381", "Q_10116839467663", "Q_10116841391188", "Q_10116834342345", "Q_10116834343278", "Q_10116834343278", "Q_10116834345857", "Q_10116834345857", "Q_10116834390155", "Q_10116834392333", "Q_10116834394418", "Q_10116834406508", "Q_10116834416833", "Q_10116836016576", "Q_10116834417042", "Q_10116834418502", "Q_10116844055869", "Q_10116839086051", "Q_10116839089114", "Q_10116839091805", "Q_10116839100106", "Q_10116839152669", "Q_10116839154199", "Q_10116839157333", "Q_10116839161497", "Q_10116839164845", "Q_10116839259124", "Q_10116839260993", "Q_10116839274848", "Q_10116839275089", "Q_10116839322299", "Q_10116839323481", "Q_10116839332872", "Q_10116834354346", "Q_10116834356278", "Q_10116834358371", "Q_10116834383854", "Q_10116834384286", "Q_10116834385806", "Q_10116834386443", "Q_10116838963826", "Q_10116838966381", "Q_10116838973135", "Q_10116838975165", "Q_10116838976494", "Q_10116839141430", "Q_10116847297841", "Q_10116847298115", "Q_10116847299816", "Q_10116834335360", "Q_10116834336046", "Q_10116834337238", "Q_10116834338160", "Q_10116834339235", "Q_10116834340113", "Q_10116834378344", "Q_10116834382324", "Q_10116834387258", "Q_10116834388100", "Q_10116834414863", "Q_10116834415215", "Q_10116843171063", "Q_10116839043866", "Q_10116839046588", "Q_10116839047566", "Q_10116839052615", "Q_10116839055131", "Q_10116839134890", "Q_10116839138370", "Q_10116839140751", "Q_10116839142565", "Q_10116839308100", "Q_10116839309710", "Q_10116839310378", "Q_10316834958601", "Q_10316834960693", "Q_10316834962888", "Q_10316834964556", "Q_10316834966409", "Q_10316834967095", "Q_10316835009749", "Q_10316835011929", "Q_10316835013970", "Q_10316835015202", "Q_10316835016677", "Q_10316835017608", "Q_10316835018248", "Q_10316835019874", "Q_10316835020077", "Q_10316835021788", "Q_10316835071359", "Q_10316835072251", "Q_10316835073865", "Q_10316835074503", "Q_10316835075324", "Q_10316835076173", "Q_10316835122608", "Q_10316835123983", "Q_10316835124544", "Q_10316835125896", "Q_10316835126496", "Q_10316835127681", "Q_10316835128095", "Q_10316835129932", "Q_10316835130856", "Q_10316835131756", "Q_10316835136988", "Q_10316835138665", "Q_10316835140653", "Q_10316835143293", "Q_10316835144224", "Q_10316835145322", "Q_10316838452535", "Q_10316838453395", "Q_10316838454890", "Q_10316838455152", "Q_10316838456584", "Q_10316838457500", "Q_10316838458552", "Q_10316835108169", "Q_10316834943332", "Q_10316834945523", "Q_10316834947257", "Q_10316834950841", "Q_10316834952543", "Q_10316834953878", "Q_10316834993067", "Q_10316835023813", "Q_10316835024177", "Q_10316835025798", "Q_10316835026773", "Q_10316835027572", "Q_10316835028105", "Q_10316835029256", "Q_10316835030724", "Q_10316835031394", "Q_10316835032258", "Q_10316835033331", "Q_10316835062116", "Q_10316835064658", "Q_10316835066482", "Q_10316835067145", "Q_10316835068638", "Q_10316835069943", "Q_10316835070607", "Q_10316835082037", "Q_10316835083043", "Q_10316835084503", "Q_10316835085774", "Q_10316835086483", "Q_10316835087073", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838507091", "Q_10316838510939", "Q_10316838511252", "Q_10316838513656", "Q_10316838514338", "Q_10316838516196", "Q_10316838543339", "Q_10316838544882", "Q_10316838545144", "Q_10316838546089", "Q_10316838566307", "Q_10316838567776", "Q_10316838568593", "Q_10316838569790", "Q_10316838570258", "Q_10316838571204", "Q_10316838572341", "Q_10316838573793", "Q_10316838574105", "Q_10316838587285", "Q_10316838588413", "Q_10316838589460", "Q_10316838590388", "Q_10316838591392", "Q_10316838592977", "Q_10316834910707", "Q_10316834911757", "Q_10316834913934", "Q_10316834914359", "Q_10316834916306", "Q_10316834918094", "Q_10316834920113", "Q_10316834922341", "Q_10316834925141", "Q_10316834927882", "Q_10316834928127", "Q_10316835977881", "Q_10316835978735", "Q_10316835979702", "Q_10316835980399", "Q_10316835981159", "Q_10316835982544", "Q_10316835983853", "Q_10316835984119", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838507091", "Q_10316838510939", "Q_10316838511252", "Q_10316838513656", "Q_10316838514338", "Q_10316838516196", "Q_10316838543339", "Q_10316838544882", "Q_10316838545144", "Q_10316838546089", "Q_10316838566307", "Q_10316838567776", "Q_10316838568593", "Q_10316838569790", "Q_10316838570258", "Q_10316838571204", "Q_10316838572341", "Q_10316838573793", "Q_10316838574105", "Q_10316838587285", "Q_10316838588413", "Q_10316838589460", "Q_10316838590388", "Q_10316838591392", "Q_10316838592977", "Q_10316834934461", "Q_10316834935465", "Q_10316834936646", "Q_10316834937996", "Q_10316834938364", "Q_10316834939053", "Q_10316834940722", "Q_10316834941193", "Q_10316834942385", "Q_10316834944763", "Q_10316834946256", "Q_10316834948436", "Q_10316834949542", "Q_10316834951116");
        List<String> ids = Lists.newArrayList("Q_10116839152669",
                "Q_10116839154199",
                "Q_10116839157333",
                "Q_10116839161497",
                "Q_10116839164845",
                "Q_10116832076717", "Q_10116832102227", "Q_10116839475801", "Q_10116832082723", "Q_10116832083743", "Q_10116832084473", "Q_10116832085470", "Q_10116832086602", "Q_10116832087381", "Q_10116839467663", "Q_10116841391188", "Q_10116834342345", "Q_10116834343278", "Q_10116834343278", "Q_10116834345857", "Q_10116834345857", "Q_10116834390155", "Q_10116834392333", "Q_10116834394418", "Q_10116834406508", "Q_10116834416833", "Q_10116836016576", "Q_10116834417042", "Q_10116834418502", "Q_10116844055869", "Q_10116839086051", "Q_10116839089114", "Q_10116839091805", "Q_10116839100106", "Q_10116839152669", "Q_10116839154199", "Q_10116839157333", "Q_10116839161497", "Q_10116839164845", "Q_10116839259124", "Q_10116839260993", "Q_10116839274848", "Q_10116839275089", "Q_10116839322299", "Q_10116839323481", "Q_10116839332872", "Q_10116834354346", "Q_10116834356278", "Q_10116834358371", "Q_10116834383854", "Q_10116834384286", "Q_10116834385806", "Q_10116834386443", "Q_10116838963826", "Q_10116838966381", "Q_10116838973135", "Q_10116838975165", "Q_10116838976494", "Q_10116839141430", "Q_10116847297841", "Q_10116847298115", "Q_10116847299816", "Q_10116834335360", "Q_10116834336046", "Q_10116834337238", "Q_10116834338160", "Q_10116834339235", "Q_10116834340113", "Q_10116834378344", "Q_10116834382324", "Q_10116834387258", "Q_10116834388100", "Q_10116834414863", "Q_10116834415215", "Q_10116843171063", "Q_10116839043866", "Q_10116839046588", "Q_10116839047566", "Q_10116839052615", "Q_10116839055131", "Q_10116839134890", "Q_10116839138370", "Q_10116839140751", "Q_10116839142565", "Q_10116839308100", "Q_10116839309710", "Q_10116839310378", "Q_10316834958601", "Q_10316834960693", "Q_10316834962888", "Q_10316834964556", "Q_10316834966409", "Q_10316834967095", "Q_10316835009749", "Q_10316835011929", "Q_10316835013970", "Q_10316835015202", "Q_10316835016677", "Q_10316835017608", "Q_10316835018248", "Q_10316835019874", "Q_10316835020077", "Q_10316835021788", "Q_10316835071359", "Q_10316835072251", "Q_10316835073865", "Q_10316835074503", "Q_10316835075324", "Q_10316835076173", "Q_10316835122608", "Q_10316835123983", "Q_10316835124544", "Q_10316835125896", "Q_10316835126496", "Q_10316835127681", "Q_10316835128095", "Q_10316835129932", "Q_10316835130856", "Q_10316835131756", "Q_10316835136988", "Q_10316835138665", "Q_10316835140653", "Q_10316835143293", "Q_10316835144224", "Q_10316835145322", "Q_10316838452535", "Q_10316838453395", "Q_10316838454890", "Q_10316838455152", "Q_10316838456584", "Q_10316838457500", "Q_10316838458552", "Q_10316835108169", "Q_10316834943332", "Q_10316834945523", "Q_10316834947257", "Q_10316834950841", "Q_10316834952543", "Q_10316834953878", "Q_10316834993067", "Q_10316835023813", "Q_10316835024177", "Q_10316835025798", "Q_10316835026773", "Q_10316835027572", "Q_10316835028105", "Q_10316835029256", "Q_10316835030724", "Q_10316835031394", "Q_10316835032258", "Q_10316835033331", "Q_10316835062116", "Q_10316835064658", "Q_10316835066482", "Q_10316835067145", "Q_10316835068638", "Q_10316835069943", "Q_10316835070607", "Q_10316835082037", "Q_10316835083043", "Q_10316835084503", "Q_10316835085774", "Q_10316835086483", "Q_10316835087073", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812",
                "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838507091", "Q_10316838510939", "Q_10316838511252", "Q_10316838513656", "Q_10316838514338", "Q_10316838516196", "Q_10316838543339", "Q_10316838544882", "Q_10316838545144", "Q_10316838546089", "Q_10316838566307", "Q_10316838567776", "Q_10316838568593", "Q_10316838569790", "Q_10316838570258", "Q_10316838571204", "Q_10316838572341", "Q_10316838573793", "Q_10316838574105", "Q_10316838587285", "Q_10316838588413", "Q_10316838589460", "Q_10316838590388", "Q_10316838591392", "Q_10316838592977", "Q_10316834910707", "Q_10316834911757", "Q_10316834913934", "Q_10316834914359", "Q_10316834916306", "Q_10316834918094", "Q_10316834920113", "Q_10316834922341", "Q_10316834925141", "Q_10316834927882", "Q_10316834928127", "Q_10316835977881", "Q_10316835978735", "Q_10316835979702", "Q_10316835980399", "Q_10316835981159", "Q_10316835982544", "Q_10316835983853", "Q_10316835984119", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838507091", "Q_10316838510939", "Q_10316838511252", "Q_10316838513656", "Q_10316838514338", "Q_10316838516196", "Q_10316838543339", "Q_10316838544882", "Q_10316838545144", "Q_10316838546089", "Q_10316838566307", "Q_10316838567776", "Q_10316838568593", "Q_10316838569790", "Q_10316838570258", "Q_10316838571204", "Q_10316838572341", "Q_10316838573793", "Q_10316838574105", "Q_10316838587285", "Q_10316838588413", "Q_10316838589460", "Q_10316838590388", "Q_10316838591392", "Q_10316838592977", "Q_10316834934461", "Q_10316834935465", "Q_10316834936646", "Q_10316834937996", "Q_10316834938364", "Q_10316834939053", "Q_10316834940722", "Q_10316834941193", "Q_10316834942385", "Q_10316834944763", "Q_10316834946256", "Q_10316834948436", "Q_10316834949542", "Q_10316834951116", "Q_10316838463202", "Q_10316838464021", "Q_10316838465812", "Q_10316838507091", "Q_10316838510939", "Q_10316838511252", "Q_10316838513656", "Q_10316838514338", "Q_10316838516196", "Q_10316838543339", "Q_10316838544882", "Q_10316838545144", "Q_10316838546089", "Q_10316838566307", "Q_10316838567776", "Q_10316838568593", "Q_10316838569790", "Q_10316838570258", "Q_10316838571204", "Q_10316838572341", "Q_10316838573793", "Q_10316838574105", "Q_10316838587285", "Q_10316838588413", "Q_10316838589460", "Q_10316838590388", "Q_10316838591392", "Q_10316838592977", "Q_10316840449808", "Q_10316840450333", "Q_10316840451953", "Q_10316840452537", "Q_10316840453319", "Q_10316840454954", "Q_10316840455711", "Q_10316840456551", "Q_10316840457596", "Q_10316840458291", "Q_10316840501677", "Q_10316840502456", "Q_10316840503885", "Q_10316840504535", "Q_10316840505583", "Q_10316840506962", "Q_10316840507004", "Q_10316840508396", "Q_10316840509852", "Q_10316840510091", "Q_10316834910707", "Q_10316834911757", "Q_10316834913934", "Q_10316834914359", "Q_10316834916306", "Q_10316834918094", "Q_10316834920113", "Q_10316834922341", "Q_10316834925141", "Q_10316834927882", "Q_10316834928127", "Q_10316835977881", "Q_10316835978735", "Q_10316835979702", "Q_10316835980399", "Q_10316835981159", "Q_10316835982544", "Q_10316835983853", "Q_10316835984119", "Q_10316838415777", "Q_10316838416797", "Q_10316838417666", "Q_10316838418818", "Q_10316838419545", "Q_10316838420958", "Q_10316838421664", "Q_10316838422623", "Q_10316838423370", "Q_10316838424982", "Q_10316840225478", "Q_10316840226721", "Q_10316840227292", "Q_10316840228376", "Q_10316840229827", "Q_10316840230559", "Q_10316840231652", "Q_10316840232969", "Q_10316840233298", "Q_10316840234885", "Q_10316840235161", "Q_10316840236991", "Q_10316840237422", "Q_10316840238259", "Q_10316840240682", "Q_10316840247323", "Q_10316840248357", "Q_10316840164155", "Q_10316840165551", "Q_10316840166479", "Q_10316840183087", "Q_10316840184613", "Q_10316840185156", "Q_10316840186380", "Q_10316840187405", "Q_10316840208828", "Q_10316840164155", "Q_10316840165551", "Q_10316840166479", "Q_10316840183087", "Q_10316840184613", "Q_10316840185156", "Q_10316840186380", "Q_10316840187405", "Q_10316840208828", "Q_10316840294591", "Q_10316840295683", "Q_10316840296686", "Q_10316834934461", "Q_10316834935465", "Q_10316834936646", "Q_10316834937996", "Q_10316834938364", "Q_10316834939053", "Q_10316834940722", "Q_10316834941193", "Q_10316834942385", "Q_10316834944763", "Q_10316834946256", "Q_10316834948436", "Q_10316834949542", "Q_10316834951116", "Q_10316840193674", "Q_10316840194411", "Q_10316840195028", "Q_10316840196295", "Q_10316840197964", "Q_10316840198167", "Q_10316857002826", "Q_10316857003892", "Q_10316857004540", "Q_10316857005351", "Q_10316857006860", "Q_10316857007623", "Q_10316857008955", "Q_10316857009027", "Q_10316857010850", "Q_10316857011798", "Q_10316857012278", "Q_10316857013281", "Q_10316857014731", "Q_10316857015960", "Q_10316857016491", "Q_10316857031508", "Q_10316857032664", "Q_10316857033013", "Q_10316857034649", "Q_10316857035715", "Q_10316857036920", "Q_10316857037464", "Q_10316857038263", "Q_10316857039812", "Q_10316857040838", "Q_10316857041414", "Q_10316857042690", "Q_10316857043484", "Q_10316857044294", "Q_10316857045371", "Q_10316857046485", "Q_10316857047834", "Q_10316857048449", "Q_10316857049788", "Q_10316857050149", "Q_10316857051298", "Q_10216856817622", "Q_10216856818623", "Q_10216856819158", "Q_10216856820182", "Q_10216856821289", "Q_10216856822035", "Q_10216856823783", "Q_10216856824532", "Q_10216856825358", "Q_10216856826962", "Q_10216856827209", "Q_10216856828919", "Q_10216856829824", "Q_10216856830044", "Q_10216856831804", "Q_10216856832070", "Q_10216856833313", "Q_10216856834707", "Q_10216856835568", "Q_10216856836662", "Q_10216856837993", "Q_10216856838058", "Q_10216856839955", "Q_10216856840050", "Q_10216856841502", "Q_10216856842976", "Q_10216856843861", "Q_10216856844018", "Q_10216856845828", "Q_10216856847932", "Q_10216856849844", "Q_10216856851042", "Q_10216856853252", "Q_10216856855559", "Q_10216856865930", "Q_10216856866011", "Q_10216856867561", "Q_10216856868705", "Q_10216856869115", "Q_10216856870872", "Q_10216856871583", "Q_10216856872697", "Q_10216856873156", "Q_10216856874799", "Q_10216856875797", "Q_10216856876693", "Q_10216856782768", "Q_10216856783415", "Q_10216856784692", "Q_10216856785267", "Q_10216856786825", "Q_10216856787224", "Q_10216856788151", "Q_10216856789742", "Q_10216856790218", "Q_10216856791974", "Q_10216856792414", "Q_10216856793236", "Q_10216856794306", "Q_10216856795682", "Q_10216856796432", "Q_10216856797298", "Q_10216856798498", "Q_10216856799780", "Q_10216856800930", "Q_10216856801401", "Q_10216856802726", "Q_10216856803741", "Q_10216856804184", "Q_10216856805134", "Q_10216856806280", "Q_10216856807322", "Q_10216856808778", "Q_10216856809397", "Q_10216856810513", "Q_10216856811690", "Q_10216856812659", "Q_10216856813870", "Q_10216856814604", "Q_10216856815921", "Q_10216856816466", "Q_10216856846574", "Q_10216856848867", "Q_10216856850440", "Q_10216856852359", "Q_10216856854444", "Q_10216856856095", "Q_10216856857684", "Q_10216856858368", "Q_10216856859657", "Q_10216856860608", "Q_10216856861736", "Q_10216856862965", "Q_10216856863337", "Q_10216856864128", "Q_10316857002826", "Q_10316857003892", "Q_10316857004540", "Q_10316857005351", "Q_10316857006860", "Q_10316857007623", "Q_10316857008955", "Q_10316857009027", "Q_10316857010850", "Q_10316857011798", "Q_10316857012278", "Q_10316857013281", "Q_10316857014731", "Q_10316857015960", "Q_10316857016491", "Q_10316857017550", "Q_10316857018880", "Q_10316857019124", "Q_10316857020732", "Q_10316857021087", "Q_10316857022182", "Q_10316857023805", "Q_10316857024487", "Q_10316857025831", "Q_10316857026500", "Q_10316857027187", "Q_10316857028835", "Q_10316857029644", "Q_10316857030498", "Q_10316857053023", "Q_10316857055026", "Q_10316857057422", "Q_10316857059842", "Q_10316857061718", "Q_10316857063213", "Q_10316857065255", "Q_10316857067038", "Q_10316857069335", "Q_10316857071306", "Q_10316857072030", "Q_10316857073515", "Q_10316857074411", "Q_10316857075489", "Q_10316857076613", "Q_10316857077326", "Q_10316857078188", "Q_10316857079034", "Q_10316857080344", "Q_10316857081620", "Q_10316857082613", "Q_10316857083483", "Q_10316857031508", "Q_10316857032664", "Q_10316857033013", "Q_10316857034649", "Q_10316857035715", "Q_10316857036920", "Q_10316857037464", "Q_10316857038263", "Q_10316857039812", "Q_10316857040838", "Q_10316857041414", "Q_10316857042690", "Q_10316857043484", "Q_10316857044294", "Q_10316857045371", "Q_10316857046485", "Q_10316857047834", "Q_10316857048449", "Q_10316857049788", "Q_10316857050149", "Q_10316857051298", "Q_10316857052664", "Q_10316857054564", "Q_10316857056694", "Q_10316857058152", "Q_10316857060490", "Q_10316857062252", "Q_10316857064487", "Q_10316857066639", "Q_10316857068815", "Q_10316857070869", "Q_10316857084804", "Q_10316857085665", "Q_10316857086914", "Q_10316857087068", "Q_10316857088434", "Q_10316857089516", "Q_10316857090539", "Q_10316857091579", "Q_10316857092559", "Q_10316857093960", "Q_10316857094020", "Q_10316857095142", "Q_10316857096862", "Q_10316857097871", "Q_10316857098776", "Q_10316857099857", "Q_10316857100087", "Q_10316857101339", "Q_10316857102686", "Q_10316857103219", "Q_10316857104410", "Q_10316857106669", "Q_10316857107680", "Q_10316857108187", "Q_10316857109533", "Q_10316857110137", "Q_10316857111652", "Q_10316857112772", "Q_10316857113869", "Q_10316857114638", "Q_10316857115333", "Q_10316857116551",
                "Q_10316840309102", "Q_10316840317419", "Q_10316840326334", "Q_10316840327517", "Q_10316840328201", "Q_10316840329454", "Q_10316840330956", "Q_10316840331253", "Q_10316840332920", "Q_10316840333079", "Q_10316840334791", "Q_10316840335822", "Q_10316840336869", "Q_10316840337706", "Q_10316840338672", "Q_10316840339992", "Q_10316840340330", "Q_10316840341875", "Q_10316840342777", "Q_10316840343441", "Q_10316840605116", "Q_10316840606195", "Q_10316840607038", "Q_10316840608881", "Q_10316840609249", "Q_10316840610394", "Q_10316840611248", "Q_10316840612404", "Q_10316840613066", "Q_10316840614165", "Q_10316840615266", "Q_10316840669359", "Q_10316840670999", "Q_10316840671293", "Q_10316840672108", "Q_10316840673379", "Q_10316840674450", "Q_10316840682145", "Q_10316840683167", "Q_10316840684779", "Q_10316840685025", "Q_10316840686991", "Q_10316840687075", "Q_10316840704346", "Q_10316840705916", "Q_10316840706474", "Q_10316840707925", "Q_10316840708447", "Q_10316840709584", "Q_10316840710583", "Q_10316840711850", "Q_10316840712655", "Q_10316840713368", "Q_10316840714306", "Q_10316840715392", "Q_10316840739291", "Q_10316840740995", "Q_10316840741629", "Q_10316840742779", "Q_10316840743103", "Q_10316840744009", "Q_10316840745526", "Q_10316840746202", "Q_10316840747446", "Q_10316840748774", "Q_10316840749624", "Q_10316840750819", "Q_10316840751935", "Q_10316840752076", "Q_10316840753004", "Q_10316840754390", "Q_10316840755703", "Q_10316840756124", "Q_10316840757491", "Q_10316840758432", "Q_10316840759707"
        );
        Set<String> idSet = new HashSet<>(ids);
        System.out.println(JSONObject.toJSONString(idSet));
    }



}
